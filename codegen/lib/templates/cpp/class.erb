#include "<%= entity.name %>.h"

#include <emscripten/bind.h>

namespace TW::Wasm {
<%# Constructors -%>
<%  entity.static_methods.each do |method| -%>
<%    next if method.name.start_with?('Create') || method.name.start_with?('Init') -%>
<%=  render('cpp/static_method.erb', { method: method }) -%>
<%  end -%>
<%# Properties -%>
<%=  render('cpp/class_properties.erb') -%>
<%# Methods -%>
<% entity.methods.each do |method| -%>
<%   next if method.name == "Delete" -%>
<%=  render('cpp/method.erb', { method: method }) %>
<% end -%>
<% if entity.enum? -%>
<%=  render('cpp/enum_value.erb') -%>
<% end -%>
<%# EMSCRIPTEN_BINDINGS -%>
EMSCRIPTEN_BINDINGS(Wasm_TW<%= entity.name %>) {
<% entity_name = entity.enum? ? "TW" + entity.name : entity.name; wasm_class_name = WasmCppHelper.class_name(entity: entity) %>
    emscripten::class_<<%= wasm_class_name %>>("<%= entity_name %>")
<% if entity.enum? -%>
        .function("value", &<%= wasm_class_name %>::getValue)
<% end -%>
<%  entity.static_methods.each do |method| -%>
<%  function_name = WasmCppHelper.function_name(entity: entity, function: method) -%>
        .class_function("<%= function_name %>", &<%= wasm_class_name %>::<%= function_name %>, emscripten::allow_raw_pointers())
<%  end -%>
<%- entity.properties.each do |property| -%>
<%  function_name = WasmCppHelper.format_name(property.name) -%>
        .function("<%= function_name %>", &<%= wasm_class_name %>::<%= function_name %>, emscripten::allow_raw_pointers())
<%- end -%>
<% entity.methods.each do |method| -%>
<%  next if method.name == "Delete" -%>
<%  function_name = WasmCppHelper.format_name(method.name) -%>
        .function("<%= function_name %>", &<%= wasm_class_name %>::<%= function_name %>, emscripten::allow_raw_pointers())
<% end -%>
    ;
}

} // namespace TW::Wasm
